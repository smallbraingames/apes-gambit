/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  BRGameComponent,
  BRGameComponentInterface,
} from "../BRGameComponent";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "world",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BareComponent__NotImplemented",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnableWritable__NotWriter",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "authorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getEntities",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "rechargeTime",
            type: "uint32",
          },
          {
            internalType: "uint16",
            name: "initialGridDim",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "secondsPerGridShrink",
            type: "uint16",
          },
          {
            internalType: "int256",
            name: "perlinDenom",
            type: "int256",
          },
          {
            internalType: "uint16",
            name: "perlinThresholdBanana",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "perlinSeed",
            type: "uint16",
          },
          {
            internalType: "uint8",
            name: "perlinPrecision",
            type: "uint8",
          },
          {
            internalType: "enum BRGameStatus",
            name: "status",
            type: "uint8",
          },
        ],
        internalType: "struct BRGame",
        name: "value",
        type: "tuple",
      },
    ],
    name: "getEntitiesWithValue",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "getEntitiesWithValue",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getRawValue",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSchema",
    outputs: [
      {
        internalType: "string[]",
        name: "keys",
        type: "string[]",
      },
      {
        internalType: "enum LibTypes.SchemaValue[]",
        name: "values",
        type: "uint8[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getValue",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "rechargeTime",
            type: "uint32",
          },
          {
            internalType: "uint16",
            name: "initialGridDim",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "secondsPerGridShrink",
            type: "uint16",
          },
          {
            internalType: "int256",
            name: "perlinDenom",
            type: "int256",
          },
          {
            internalType: "uint16",
            name: "perlinThresholdBanana",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "perlinSeed",
            type: "uint16",
          },
          {
            internalType: "uint8",
            name: "perlinPrecision",
            type: "uint8",
          },
          {
            internalType: "enum BRGameStatus",
            name: "status",
            type: "uint8",
          },
        ],
        internalType: "struct BRGame",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "has",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "registerIndexer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_world",
        type: "address",
      },
    ],
    name: "registerWorld",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "rechargeTime",
            type: "uint32",
          },
          {
            internalType: "uint16",
            name: "initialGridDim",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "secondsPerGridShrink",
            type: "uint16",
          },
          {
            internalType: "int256",
            name: "perlinDenom",
            type: "int256",
          },
          {
            internalType: "uint16",
            name: "perlinThresholdBanana",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "perlinSeed",
            type: "uint16",
          },
          {
            internalType: "uint8",
            name: "perlinPrecision",
            type: "uint8",
          },
          {
            internalType: "enum BRGameStatus",
            name: "status",
            type: "uint8",
          },
        ],
        internalType: "struct BRGame",
        name: "value",
        type: "tuple",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "unauthorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "world",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "writeAccess",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001d7438038062001d74833981016040819052620000349162000200565b807f4c5443efce5b9ecc79a1896dd0de307031c10094a3b3fc9a5d2b086c5b792de062000061336200008a565b60028190556001600160a01b0382161562000081576200008182620000fe565b50505062000232565b6000620000a1620001b660201b62000f8f1760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b62000108620001da565b6001600160a01b0316336001600160a01b0316146200013a57604051632f7a8ee160e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b038316908117909155600254604051630f30347760e41b8152306004820152602481019190915263f303477090604401600060405180830381600087803b1580156200019a57600080fd5b505af1158015620001af573d6000803e3d6000fd5b5050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000620001f1620001b660201b62000f8f1760201c565b546001600160a01b0316919050565b6000602082840312156200021357600080fd5b81516001600160a01b03811681146200022b57600080fd5b9392505050565b611b3280620002426000396000f3fe608060405234801561001057600080fd5b50600436106101515760003560e01c80638da5cb5b116100cd578063b8bc073d11610081578063cccf7a8e11610066578063cccf7a8e146102eb578063f2fde38b146102fe578063f6fa94db1461031157600080fd5b8063b8bc073d146102b8578063bf4fe57e146102d857600080fd5b80639f48e319116100b25780639f48e3191461027b578063af640d0f1461028e578063b361be46146102a557600080fd5b80638da5cb5b146102605780639d2c76b41461026857600080fd5b80634fef6a381161012457806375c0669c1161010957806375c0669c14610217578063861eb9051461022a5780638b2829471461024d57600080fd5b80634fef6a38146101ee5780636b122fe01461020157600080fd5b80630ff4c9161461015657806330b67baa1461017f57806331b933b9146101c45780634cc82215146101d9575b600080fd5b6101696101643660046111ca565b610324565b6040516101769190611226565b60405180910390f35b60005461019f9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610176565b6101cc610396565b60405161017691906112cd565b6101ec6101e73660046111ca565b6103ca565b005b6101ec6101fc366004611311565b610415565b6102096104f3565b6040516101769291906113ab565b6101ec610225366004611311565b610aac565b61023d610238366004611311565b610ade565b6040519015158152602001610176565b6101ec61025b366004611578565b610b69565b61019f610bb6565b6101ec610276366004611311565b610bfb565b6101cc6102893660046115bf565b610d24565b61029760025481565b604051908152602001610176565b6101cc6102b33660046115d8565b610396565b6102cb6102c63660046111ca565b610d4e565b6040516101769190611615565b6101ec6102e6366004611311565b610df0565b61023d6102f93660046111ca565b610ecb565b6101ec61030c366004611311565b610eed565b6101ec61031f366004611697565b610f66565b6103716040805161012081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e081018290529061010082015290565b600061037c83610d4e565b80602001905181019061038f91906117ac565b9392505050565b60606040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103d333610ade565b610409576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61041281610fb3565b50565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610485576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b6040805160098082526101408201909252606091829190816020015b606081526020019060019003908161050f575050604080516009808252610140820190925291935060208201610120803683370190505090506040518060400160405280600981526020017f737461727454696d6500000000000000000000000000000000000000000000008152508260008151811061059157610591611854565b6020026020010181905250600d816000815181106105b1576105b1611854565b602002602001019060218111156105ca576105ca6111e3565b908160218111156105dd576105dd6111e3565b815250506040518060400160405280600c81526020017f726563686172676554696d6500000000000000000000000000000000000000008152508260018151811061062a5761062a611854565b6020026020010181905250600a8160018151811061064a5761064a611854565b60200260200101906021811115610663576106636111e3565b90816021811115610676576106766111e3565b815250506040518060400160405280600e81526020017f696e697469616c4772696444696d000000000000000000000000000000000000815250826002815181106106c3576106c3611854565b60200260200101819052506009816002815181106106e3576106e3611854565b602002602001019060218111156106fc576106fc6111e3565b9081602181111561070f5761070f6111e3565b815250506040518060400160405280601481526020017f7365636f6e647350657247726964536872696e6b0000000000000000000000008152508260038151811061075c5761075c611854565b602002602001018190525060098160038151811061077c5761077c611854565b60200260200101906021811115610795576107956111e3565b908160218111156107a8576107a86111e3565b815250506040518060400160405280600b81526020017f7065726c696e44656e6f6d000000000000000000000000000000000000000000815250826004815181106107f5576107f5611854565b602002602001018190525060068160048151811061081557610815611854565b6020026020010190602181111561082e5761082e6111e3565b90816021811115610841576108416111e3565b815250506040518060400160405280601581526020017f7065726c696e5468726573686f6c6442616e616e6100000000000000000000008152508260058151811061088e5761088e611854565b60200260200101819052506005816005815181106108ae576108ae611854565b602002602001019060218111156108c7576108c76111e3565b908160218111156108da576108da6111e3565b815250506040518060400160405280600a81526020017f7065726c696e53656564000000000000000000000000000000000000000000008152508260068151811061092757610927611854565b602002602001018190525060098160068151811061094757610947611854565b60200260200101906021811115610960576109606111e3565b90816021811115610973576109736111e3565b815250506040518060400160405280600f81526020017f7065726c696e507265636973696f6e0000000000000000000000000000000000815250826007815181106109c0576109c0611854565b60200260200101819052506008816007815181106109e0576109e0611854565b602002602001019060218111156109f9576109f96111e3565b90816021811115610a0c57610a0c6111e3565b815250506040518060400160405280600681526020017f737461747573000000000000000000000000000000000000000000000000000081525082600881518110610a5957610a59611854565b6020026020010181905250600881600881518110610a7957610a79611854565b60200260200101906021811115610a9257610a926111e3565b90816021811115610aa557610aa56111e3565b9052509091565b6040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff811660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c909602052604081205460ff1680610b635750610b34610bb6565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b92915050565b610b7233610ade565b610ba8576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610bb28282611021565b5050565b6000610bf67f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610c6b576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556002546040517ff3034770000000000000000000000000000000000000000000000000000000008152306004820152602481019190915263f3034770906044015b600060405180830381600087803b158015610d0957600080fd5b505af1158015610d1d573d6000803e3d6000fd5b5050505050565b6060610b6382604051602001610d3a9190611883565b604051602081830303815290604052610396565b6000818152600160205260409020805460609190610d6b90611931565b80601f0160208091040260200160405190810160405280929190818152602001828054610d9790611931565b8015610de45780601f10610db957610100808354040283529160200191610de4565b820191906000526020600020905b815481529060010190602001808311610dc757829003601f168201915b50505050509050919050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610e60576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b60008181526001602052604081208054610ee490611931565b15159392505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610f5d576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610412816110c8565b610bb28282604051602001610f7b9190611226565b604051602081830303815290604052610b69565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000818152600160205260408120610fca9161117c565b6000546040517f0de3b7b50000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff90911690630de3b7b590602401610cef565b600082815260016020526040902061103982826119c9565b506000546040517fcfd3c57f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063cfd3c57f906110929085908590600401611ae3565b600060405180830381600087803b1580156110ac57600080fd5b505af11580156110c0573d6000803e3d6000fd5b505050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804608054604051610412928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b50805461118890611931565b6000825580601f10611198575050565b601f01602090049060005260206000209081019061041291905b808211156111c657600081556001016111b2565b5090565b6000602082840312156111dc57600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60038110611222576112226111e3565b9052565b6000610120820190508251825263ffffffff602084015116602083015261ffff60408401511660408301526060830151611266606084018261ffff169052565b506080830151608083015260a083015161128660a084018261ffff169052565b5060c083015161129c60c084018261ffff169052565b5060e08301516112b160e084018260ff169052565b50610100808401516112c582850182611212565b505092915050565b6020808252825182820181905260009190848201906040850190845b81811015611305578351835292840192918401916001016112e9565b50909695505050505050565b60006020828403121561132357600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461038f57600080fd5b6000815180845260005b8181101561136d57602081850181015186830182015201611351565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b83811015611420577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa088870301855261140e868351611347565b955093820193908201906001016113d4565b50508584038187015286518085528782019482019350915060005b8281101561146757845160228110611455576114556111e3565b8452938101939281019260010161143b565b5091979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610120810167ffffffffffffffff811182821017156114c7576114c7611474565b60405290565b600082601f8301126114de57600080fd5b813567ffffffffffffffff808211156114f9576114f9611474565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190828211818310171561153f5761153f611474565b8160405283815286602085880101111561155857600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806040838503121561158b57600080fd5b82359150602083013567ffffffffffffffff8111156115a957600080fd5b6115b5858286016114cd565b9150509250929050565b600061012082840312156115d257600080fd5b50919050565b6000602082840312156115ea57600080fd5b813567ffffffffffffffff81111561160157600080fd5b61160d848285016114cd565b949350505050565b60208152600061038f6020830184611347565b63ffffffff8116811461041257600080fd5b803561164581611628565b919050565b61ffff8116811461041257600080fd5b80356116458161164a565b60ff8116811461041257600080fd5b803561164581611665565b6003811061041257600080fd5b80356116458161167f565b6000808284036101408112156116ac57600080fd5b83359250610120807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0830112156116e257600080fd5b6116ea6114a3565b9150602085013582526116ff6040860161163a565b60208301526117106060860161165a565b60408301526117216080860161165a565b606083015260a0850135608083015261173c60c0860161165a565b60a083015261174d60e0860161165a565b60c0830152610100611760818701611674565b60e084015261177082870161168c565b9083015250919491935090915050565b805161164581611628565b80516116458161164a565b805161164581611665565b80516116458161167f565b600061012082840312156117bf57600080fd5b6117c76114a3565b825181526117d760208401611780565b60208201526117e86040840161178b565b60408201526117f96060840161178b565b60608201526080830151608082015261181460a0840161178b565b60a082015261182560c0840161178b565b60c082015261183660e08401611796565b60e08201526101006118498185016117a1565b908201529392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b813581526101208101602083013561189a81611628565b63ffffffff1660208301526118b16040840161165a565b61ffff1660408301526118c66060840161165a565b61ffff166060830152608083810135908301526118e560a0840161165a565b61ffff1660a08301526118fa60c0840161165a565b61ffff1660c083015261190f60e08401611674565b60ff1660e083015261010061192584820161168c565b6112c582850182611212565b600181811c9082168061194557607f821691505b6020821081036115d2577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b601f8211156119c457600081815260208120601f850160051c810160208610156119a55750805b601f850160051c820191505b818110156110c0578281556001016119b1565b505050565b815167ffffffffffffffff8111156119e3576119e3611474565b6119f7816119f18454611931565b8461197e565b602080601f831160018114611a4a5760008415611a145750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b1785556110c0565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b82811015611a9757888601518255948401946001909101908401611a78565b5085821015611ad357878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b82815260406020820152600061160d604083018461134756fea26469706673582212204d7f3217c210e82d9f2e956269bdf01c79cdf016e77a966beac600a2f7702ff864736f6c63430008110033";

type BRGameComponentConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BRGameComponentConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BRGameComponent__factory extends ContractFactory {
  constructor(...args: BRGameComponentConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BRGameComponent> {
    return super.deploy(world, overrides || {}) as Promise<BRGameComponent>;
  }
  override getDeployTransaction(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(world, overrides || {});
  }
  override attach(address: string): BRGameComponent {
    return super.attach(address) as BRGameComponent;
  }
  override connect(signer: Signer): BRGameComponent__factory {
    return super.connect(signer) as BRGameComponent__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BRGameComponentInterface {
    return new utils.Interface(_abi) as BRGameComponentInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BRGameComponent {
    return new Contract(address, _abi, signerOrProvider) as BRGameComponent;
  }
}
