/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  BRMovePieceSystem,
  BRMovePieceSystemInterface,
} from "../BRMovePieceSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BREntityNotGame",
    type: "error",
  },
  {
    inputs: [],
    name: "BRGameNotInProgress",
    type: "error",
  },
  {
    inputs: [],
    name: "BRNotInGame",
    type: "error",
  },
  {
    inputs: [],
    name: "BRPieceDead",
    type: "error",
  },
  {
    inputs: [],
    name: "NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "UnimplementedPieceType",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "arguments",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "piece",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "game",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "int32",
            name: "x",
            type: "int32",
          },
          {
            internalType: "int32",
            name: "y",
            type: "int32",
          },
        ],
        internalType: "struct Coord",
        name: "position",
        type: "tuple",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001c8f38038062001c8f833981016040819052620000349162000117565b600280546001600160a01b0319163317905581816001600160a01b038116156200005f5780620000c4565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200009e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000c4919062000156565b600080546001600160a01b039283166001600160a01b0319918216179091556001805494909216931692909217909155506200017d915050565b6001600160a01b03811681146200011457600080fd5b50565b600080604083850312156200012b57600080fd5b82516200013881620000fe565b60208401519092506200014b81620000fe565b809150509250929050565b6000602082840312156200016957600080fd5b81516200017681620000fe565b9392505050565b611b02806200018d6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309c5eabe146100515780638da5cb5b1461007a578063b15895dd146100a2578063f2fde38b146100b5575b600080fd5b61006461005f36600461155c565b6100ca565b6040516100719190611600565b60405180910390f35b60025460405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610071565b6100646100b0366004611663565b61037f565b6100c86100c336600461170e565b6103d1565b005b60606000806000848060200190518101906100e5919061172b565b600080549396509194509250906101329073ffffffffffffffffffffffffffffffffffffffff167f3aa78a206fc67ba4c2dbdbfa4f9637a0b391d7db261dacc2eb5d96f7b5693d976104e5565b600080549192509061017a9073ffffffffffffffffffffffffffffffffffffffff167f1f26ebf637805df90fe5cf9a282dd66905185d55ff65696a9171e1a656152d396104e5565b60008054919250906101c29073ffffffffffffffffffffffffffffffffffffffff167f4c5443efce5b9ecc79a1896dd0de307031c10094a3b3fc9a5d2b086c5b792de06104e5565b600080549192509061020a9073ffffffffffffffffffffffffffffffffffffffff167f33c4aae4b327d551cc4ea42873cd8dcaa61f5bc0f248cf0e6dd3473f9a820d666104e5565b60008054919250906102529073ffffffffffffffffffffffffffffffffffffffff167f3e4e98a8b24cd1e4f79528ef3f1cf7edfe0dbe0043563a44641446b8716086b46104e5565b600080549192509061029a9073ffffffffffffffffffffffffffffffffffffffff167f3f2fb6fd7210998f35a2426a57025beb8981672a7fe1d2a38eee35cd7fc22305610633565b90506102ac86868686868e8e3361066c565b6102b78989896106a1565b6040517ff2f9a0ab00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82169063f2f9a0ab9061030b908c908b906004016117a3565b6000604051808303816000875af115801561032a573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261037091908101906117ca565b50505050505050505050919050565b6040805160208082018690529181018490528251600390810b60608381019190915292840151900b60808201526103c79060a0016040516020818303038152906040526100ca565b90505b9392505050565b60025473ffffffffffffffffffffffffffffffffffffffff163314610457576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f4f4e4c595f4f574e45520000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b60025460405173ffffffffffffffffffffffffffffffffffffffff8084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa158015610555573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261059b9190810190611841565b90508051600003610608576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f742072656769737465726564000000000000000000000000000000604482015260640161044e565b6106298160008151811061061e5761061e6118e7565b602002602001015190565b9150505b92915050565b600080610660847f017c816a964927a00e050edd780dcf113ca2756dfa9e9fda94a05c140d9317b06104e5565b905061062981846104e5565b61067888888584610968565b6106828683610979565b61068d8584846109db565b6106978484610a22565b5050505050505050565b600080546106e59073ffffffffffffffffffffffffffffffffffffffff167f33c4aae4b327d551cc4ea42873cd8dcaa61f5bc0f248cf0e6dd3473f9a820d666104e5565b600080549192509061072d9073ffffffffffffffffffffffffffffffffffffffff167f3e4e98a8b24cd1e4f79528ef3f1cf7edfe0dbe0043563a44641446b8716086b46104e5565b60008054919250906107759073ffffffffffffffffffffffffffffffffffffffff167f3fe0524a97d46cff1be1703cd4a84d28fcc28e6c9bc09d2eedb2f0c75291a7646104e5565b60008054919250906107bd9073ffffffffffffffffffffffffffffffffffffffff167f023253b2241a10d36b8c9af452236123ad9f4644f2ef4963970b2c4b77c42db56104e5565b60008054919250906108059073ffffffffffffffffffffffffffffffffffffffff167fd43e0d138a55035def2f150c31798e941af349936fa84a9e5eda703a2e41218b6104e5565b90506000806108178488888b8d610a67565b915091508180156108285750898114155b1561095c576040517f4cc822150000000000000000000000000000000000000000000000000000000081526004810182905273ffffffffffffffffffffffffffffffffffffffff871690634cc8221590602401600060405180830381600087803b15801561089557600080fd5b505af11580156108a9573d6000803e3d6000fd5b50506040517f0ff4c916000000000000000000000000000000000000000000000000000000008152600481018490526000925073ffffffffffffffffffffffffffffffffffffffff86169150630ff4c91690602401602060405180830381865afa15801561091b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093f9190611916565b9050600061094c82610ba9565b9050610959878d83610c7d565b50505b50505050505050505050565b610973848383610ecc565b50505050565b60006109858383610f0d565b905060018160200151600281111561099f5761099f611937565b146109d6576040517f9c594b6100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b6109e6838383611077565b156109f057505050565b6040517f95913fa700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a2c82826111c5565b15610a35575050565b6040517ff9f7e24f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008060008773ffffffffffffffffffffffffffffffffffffffff1663b361be4686604051602001610a999190611966565b6040516020818303038152906040526040518263ffffffff1660e01b8152600401610ac49190611600565b600060405180830381865afa158015610ae1573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610b279190810190611841565b905060005b8151811015610b95576000828281518110610b4957610b496118e7565b60200260200101519050610b5e898288611077565b8015610b6f5750610b6f88826111c5565b15610b8257600194509250610b9f915050565b5080610b8d816119b6565b915050610b2c565b5060008092509250505b9550959350505050565b600080826005811115610bbe57610bbe611937565b03610bcb57506001919050565b6002826005811115610bdf57610bdf611937565b1480610bfc57506001826005811115610bfa57610bfa611937565b145b15610c0957506003919050565b6003826005811115610c1d57610c1d611937565b03610c2a57506005919050565b6004826005811115610c3e57610c3e611937565b03610c4b57506009919050565b6040517f1ed6e93400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff84169063cccf7a8e90602401602060405180830381865afa158015610ce8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d0c91906119ee565b610da1576040517fd923c3c40000000000000000000000000000000000000000000000000000000081526004810183905263ffffffff8216602482015273ffffffffffffffffffffffffffffffffffffffff84169063d923c3c490604401600060405180830381600087803b158015610d8457600080fd5b505af1158015610d98573d6000803e3d6000fd5b50505050505050565b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810183905260009073ffffffffffffffffffffffffffffffffffffffff851690630ff4c91690602401602060405180830381865afa158015610e0f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e339190611a10565b905073ffffffffffffffffffffffffffffffffffffffff841663d923c3c484610e5c8585611a36565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b168152600481019290925263ffffffff166024820152604401600060405180830381600087803b158015610eb857600080fd5b505af1158015610697573d6000803e3d6000fd5b610ed78383836112f5565b6109d6576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60408051808201909152600080825260208201526040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff84169063cccf7a8e90602401602060405180830381865afa158015610f8c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fb091906119ee565b610fe6576040517f82203a4100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810183905260009073ffffffffffffffffffffffffffffffffffffffff851690630ff4c916906024016040805180830381865afa158015611053573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106299190611a5a565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810183905260009073ffffffffffffffffffffffffffffffffffffffff85169063cccf7a8e90602401602060405180830381865afa1580156110e5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061110991906119ee565b611115575060006103ca565b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810184905260009073ffffffffffffffffffffffffffffffffffffffff861690630ff4c91690602401602060405180830381865afa158015611183573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111a79190611a96565b90508281036111ba5760019150506103ca565b506000949350505050565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810182905260009073ffffffffffffffffffffffffffffffffffffffff84169063cccf7a8e90602401602060405180830381865afa158015611233573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061125791906119ee565b6112635750600061062d565b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810183905260009073ffffffffffffffffffffffffffffffffffffffff851690630ff4c91690602401602060405180830381865afa1580156112d1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062991906119ee565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810183905260009073ffffffffffffffffffffffffffffffffffffffff85169063cccf7a8e90602401602060405180830381865afa158015611363573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061138791906119ee565b611393575060006103ca565b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810184905260009073ffffffffffffffffffffffffffffffffffffffff861690630ff4c91690602401602060405180830381865afa158015611401573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114259190611aaf565b90508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146114645760009150506103ca565b506001949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156114c1576114c161146f565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561150e5761150e61146f565b604052919050565b600067ffffffffffffffff8211156115305761153061146f565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b60006020828403121561156e57600080fd5b813567ffffffffffffffff81111561158557600080fd5b8201601f8101841361159657600080fd5b80356115a96115a482611516565b6114c7565b8181528560208385010111156115be57600080fd5b81602084016020830137600091810160200191909152949350505050565b60005b838110156115f75781810151838201526020016115df565b50506000910152565b602081526000825180602084015261161f8160408501602087016115dc565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b8060030b811461166057600080fd5b50565b6000806000838503608081121561167957600080fd5b843593506020850135925060407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0820112156116b457600080fd5b506116bd61149e565b60408501356116cb81611651565b815260608501356116db81611651565b602082015292959194509192509050565b73ffffffffffffffffffffffffffffffffffffffff8116811461166057600080fd5b60006020828403121561172057600080fd5b81356103ca816116ec565b6000806000838503608081121561174157600080fd5b845193506020850151925060407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08201121561177c57600080fd5b5061178561149e565b604085015161179381611651565b815260608501516116db81611651565b828152606081016103ca6020830184805160030b8252602081015160030b60208301525050565b6000602082840312156117dc57600080fd5b815167ffffffffffffffff8111156117f357600080fd5b8201601f8101841361180457600080fd5b80516118126115a482611516565b81815285602083850101111561182757600080fd5b6118388260208301602086016115dc565b95945050505050565b6000602080838503121561185457600080fd5b825167ffffffffffffffff8082111561186c57600080fd5b818501915085601f83011261188057600080fd5b8151818111156118925761189261146f565b8060051b91506118a38483016114c7565b81815291830184019184810190888411156118bd57600080fd5b938501935b838510156118db578451825293850193908501906118c2565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006020828403121561192857600080fd5b8151600681106103ca57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6040810161062d8284805160030b8252602081015160030b60208301525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036119e7576119e7611987565b5060010190565b600060208284031215611a0057600080fd5b815180151581146103ca57600080fd5b600060208284031215611a2257600080fd5b815163ffffffff811681146103ca57600080fd5b63ffffffff818116838216019080821115611a5357611a53611987565b5092915050565b600060408284031215611a6c57600080fd5b611a7461149e565b82518152602083015160038110611a8a57600080fd5b60208201529392505050565b600060208284031215611aa857600080fd5b5051919050565b600060208284031215611ac157600080fd5b81516103ca816116ec56fea2646970667358221220e27bf66637f4b30c868a024bcdda224d544f29ce347f5ae4c3047fc4bdb0e42464736f6c63430008110033";

type BRMovePieceSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BRMovePieceSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BRMovePieceSystem__factory extends ContractFactory {
  constructor(...args: BRMovePieceSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BRMovePieceSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<BRMovePieceSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): BRMovePieceSystem {
    return super.attach(address) as BRMovePieceSystem;
  }
  override connect(signer: Signer): BRMovePieceSystem__factory {
    return super.connect(signer) as BRMovePieceSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BRMovePieceSystemInterface {
    return new utils.Interface(_abi) as BRMovePieceSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BRMovePieceSystem {
    return new Contract(address, _abi, signerOrProvider) as BRMovePieceSystem;
  }
}
