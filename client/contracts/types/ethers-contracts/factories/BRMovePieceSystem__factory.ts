/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  BRMovePieceSystem,
  BRMovePieceSystemInterface,
} from "../BRMovePieceSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BREntityNotGame",
    type: "error",
  },
  {
    inputs: [],
    name: "BRGameNotInProgress",
    type: "error",
  },
  {
    inputs: [],
    name: "BRNotInGame",
    type: "error",
  },
  {
    inputs: [],
    name: "BRNotRecharged",
    type: "error",
  },
  {
    inputs: [],
    name: "BRPieceDead",
    type: "error",
  },
  {
    inputs: [],
    name: "NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "UnimplementedPieceType",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "arguments",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "piece",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "game",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "int32",
            name: "x",
            type: "int32",
          },
          {
            internalType: "int32",
            name: "y",
            type: "int32",
          },
        ],
        internalType: "struct Coord",
        name: "position",
        type: "tuple",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001fda38038062001fda833981016040819052620000349162000117565b600280546001600160a01b0319163317905581816001600160a01b038116156200005f5780620000c4565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200009e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000c4919062000156565b600080546001600160a01b039283166001600160a01b0319918216179091556001805494909216931692909217909155506200017d915050565b6001600160a01b03811681146200011457600080fd5b50565b600080604083850312156200012b57600080fd5b82516200013881620000fe565b60208401519092506200014b81620000fe565b809150509250929050565b6000602082840312156200016957600080fd5b81516200017681620000fe565b9392505050565b611e4d806200018d6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309c5eabe146100515780638da5cb5b1461007a578063b15895dd146100a2578063f2fde38b146100b5575b600080fd5b61006461005f366004611857565b6100ca565b60405161007191906118fb565b60405180910390f35b60025460405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610071565b6100646100b036600461195e565b61045a565b6100c86100c3366004611a09565b6104ac565b005b60606000806000848060200190518101906100e59190611a26565b600080549396509194509250906101329073ffffffffffffffffffffffffffffffffffffffff167f3aa78a206fc67ba4c2dbdbfa4f9637a0b391d7db261dacc2eb5d96f7b5693d976105c0565b600080549192509061017a9073ffffffffffffffffffffffffffffffffffffffff167f1f26ebf637805df90fe5cf9a282dd66905185d55ff65696a9171e1a656152d396105c0565b60008054919250906101c29073ffffffffffffffffffffffffffffffffffffffff167f4c5443efce5b9ecc79a1896dd0de307031c10094a3b3fc9a5d2b086c5b792de06105c0565b600080549192509061020a9073ffffffffffffffffffffffffffffffffffffffff167f33c4aae4b327d551cc4ea42873cd8dcaa61f5bc0f248cf0e6dd3473f9a820d666105c0565b60008054919250906102529073ffffffffffffffffffffffffffffffffffffffff167f3e4e98a8b24cd1e4f79528ef3f1cf7edfe0dbe0043563a44641446b8716086b46105c0565b600080549192509061029a9073ffffffffffffffffffffffffffffffffffffffff167f6f6c09948e327abfd3c44b7965920048be367af522273db94a5172d20538b9ac6105c0565b60008054919250906102e29073ffffffffffffffffffffffffffffffffffffffff167f3f2fb6fd7210998f35a2426a57025beb8981672a7fe1d2a38eee35cd7fc2230561070e565b90506102f487878787878f8f33610747565b61030082868c8c61077c565b6040517f1ab06ee5000000000000000000000000000000000000000000000000000000008152600481018b905242602482015273ffffffffffffffffffffffffffffffffffffffff831690631ab06ee590604401600060405180830381600087803b15801561036e57600080fd5b505af1158015610382573d6000803e3d6000fd5b505050506103918a8a8a61098f565b6040517ff2f9a0ab00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82169063f2f9a0ab906103e5908d908c90600401611a9e565b6000604051808303816000875af1158015610404573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261044a9190810190611ac5565b5050505050505050505050919050565b6040805160208082018690529181018490528251600390810b60608381019190915292840151900b60808201526104a29060a0016040516020818303038152906040526100ca565b90505b9392505050565b60025473ffffffffffffffffffffffffffffffffffffffff163314610532576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f4f4e4c595f4f574e45520000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b60025460405173ffffffffffffffffffffffffffffffffffffffff8084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa158015610630573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526106769190810190611b3c565b905080516000036106e3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f7420726567697374657265640000000000000000000000000000006044820152606401610529565b610704816000815181106106f9576106f9611be2565b602002602001015190565b9150505b92915050565b60008061073b847f017c816a964927a00e050edd780dcf113ca2756dfa9e9fda94a05c140d9317b06105c0565b905061070481846105c0565b61075388888584610c56565b61075d8683610c66565b610768858484610cc8565b6107728484610d0f565b5050505050505050565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff85169063cccf7a8e90602401602060405180830381865afa1580156107e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080b9190611c11565b15610989576040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810183905260009073ffffffffffffffffffffffffffffffffffffffff861690630ff4c91690602401602060405180830381865afa15801561087e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a29190611c33565b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810184905290915060009073ffffffffffffffffffffffffffffffffffffffff861690630ff4c91690602401606060405180830381865afa158015610913573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109379190611c65565b6020015190504261094e63ffffffff831684611cff565b1115610986576040517fbabe350500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505b50505050565b600080546109d39073ffffffffffffffffffffffffffffffffffffffff167f33c4aae4b327d551cc4ea42873cd8dcaa61f5bc0f248cf0e6dd3473f9a820d666105c0565b6000805491925090610a1b9073ffffffffffffffffffffffffffffffffffffffff167f3e4e98a8b24cd1e4f79528ef3f1cf7edfe0dbe0043563a44641446b8716086b46105c0565b6000805491925090610a639073ffffffffffffffffffffffffffffffffffffffff167f3fe0524a97d46cff1be1703cd4a84d28fcc28e6c9bc09d2eedb2f0c75291a7646105c0565b6000805491925090610aab9073ffffffffffffffffffffffffffffffffffffffff167f023253b2241a10d36b8c9af452236123ad9f4644f2ef4963970b2c4b77c42db56105c0565b6000805491925090610af39073ffffffffffffffffffffffffffffffffffffffff167fd43e0d138a55035def2f150c31798e941af349936fa84a9e5eda703a2e41218b6105c0565b9050600080610b058488888b8d610d54565b91509150818015610b165750898114155b15610c4a576040517f4cc822150000000000000000000000000000000000000000000000000000000081526004810182905273ffffffffffffffffffffffffffffffffffffffff871690634cc8221590602401600060405180830381600087803b158015610b8357600080fd5b505af1158015610b97573d6000803e3d6000fd5b50506040517f0ff4c916000000000000000000000000000000000000000000000000000000008152600481018490526000925073ffffffffffffffffffffffffffffffffffffffff86169150630ff4c91690602401602060405180830381865afa158015610c09573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c2d9190611d12565b90506000610c3a82610e96565b9050610c47878d83610f6a565b50505b50505050505050505050565b610c618483836111b9565b610989565b6000610c7283836111fa565b9050600181604001516002811115610c8c57610c8c611d33565b14610cc3576040517f9c594b6100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b610cd3838383611372565b15610cdd57505050565b6040517f95913fa700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610d1982826114c0565b15610d22575050565b6040517ff9f7e24f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008060008773ffffffffffffffffffffffffffffffffffffffff1663b361be4686604051602001610d869190611d62565b6040516020818303038152906040526040518263ffffffff1660e01b8152600401610db191906118fb565b600060405180830381865afa158015610dce573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610e149190810190611b3c565b905060005b8151811015610e82576000828281518110610e3657610e36611be2565b60200260200101519050610e4b898288611372565b8015610e5c5750610e5c88826114c0565b15610e6f57600194509250610e8c915050565b5080610e7a81611d83565b915050610e19565b5060008092509250505b9550959350505050565b600080826005811115610eab57610eab611d33565b03610eb857506001919050565b6002826005811115610ecc57610ecc611d33565b1480610ee957506001826005811115610ee757610ee7611d33565b145b15610ef657506003919050565b6003826005811115610f0a57610f0a611d33565b03610f1757506005919050565b6004826005811115610f2b57610f2b611d33565b03610f3857506009919050565b6040517f1ed6e93400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff84169063cccf7a8e90602401602060405180830381865afa158015610fd5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ff99190611c11565b61108e576040517fd923c3c40000000000000000000000000000000000000000000000000000000081526004810183905263ffffffff8216602482015273ffffffffffffffffffffffffffffffffffffffff84169063d923c3c490604401600060405180830381600087803b15801561107157600080fd5b505af1158015611085573d6000803e3d6000fd5b50505050505050565b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810183905260009073ffffffffffffffffffffffffffffffffffffffff851690630ff4c91690602401602060405180830381865afa1580156110fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111209190611dbb565b905073ffffffffffffffffffffffffffffffffffffffff841663d923c3c4846111498585611dd6565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b168152600481019290925263ffffffff166024820152604401600060405180830381600087803b1580156111a557600080fd5b505af1158015610772573d6000803e3d6000fd5b6111c48383836115f0565b610cc3576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61121b60408051606081018252600080825260208201819052909182015290565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff84169063cccf7a8e90602401602060405180830381865afa158015611286573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112aa9190611c11565b6112e0576040517f82203a4100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810183905260009073ffffffffffffffffffffffffffffffffffffffff851690630ff4c91690602401606060405180830381865afa15801561134e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107049190611c65565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810183905260009073ffffffffffffffffffffffffffffffffffffffff85169063cccf7a8e90602401602060405180830381865afa1580156113e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114049190611c11565b611410575060006104a5565b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810184905260009073ffffffffffffffffffffffffffffffffffffffff861690630ff4c91690602401602060405180830381865afa15801561147e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114a29190611c33565b90508281036114b55760019150506104a5565b506000949350505050565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810182905260009073ffffffffffffffffffffffffffffffffffffffff84169063cccf7a8e90602401602060405180830381865afa15801561152e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115529190611c11565b61155e57506000610708565b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810183905260009073ffffffffffffffffffffffffffffffffffffffff851690630ff4c91690602401602060405180830381865afa1580156115cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107049190611c11565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810183905260009073ffffffffffffffffffffffffffffffffffffffff85169063cccf7a8e90602401602060405180830381865afa15801561165e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116829190611c11565b61168e575060006104a5565b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810184905260009073ffffffffffffffffffffffffffffffffffffffff861690630ff4c91690602401602060405180830381865afa1580156116fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117209190611dfa565b90508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461175f5760009150506104a5565b506001949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156117bc576117bc61176a565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156118095761180961176a565b604052919050565b600067ffffffffffffffff82111561182b5761182b61176a565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b60006020828403121561186957600080fd5b813567ffffffffffffffff81111561188057600080fd5b8201601f8101841361189157600080fd5b80356118a461189f82611811565b6117c2565b8181528560208385010111156118b957600080fd5b81602084016020830137600091810160200191909152949350505050565b60005b838110156118f25781810151838201526020016118da565b50506000910152565b602081526000825180602084015261191a8160408501602087016118d7565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b8060030b811461195b57600080fd5b50565b6000806000838503608081121561197457600080fd5b843593506020850135925060407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0820112156119af57600080fd5b506119b8611799565b60408501356119c68161194c565b815260608501356119d68161194c565b602082015292959194509192509050565b73ffffffffffffffffffffffffffffffffffffffff8116811461195b57600080fd5b600060208284031215611a1b57600080fd5b81356104a5816119e7565b60008060008385036080811215611a3c57600080fd5b845193506020850151925060407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc082011215611a7757600080fd5b50611a80611799565b6040850151611a8e8161194c565b815260608501516119d68161194c565b828152606081016104a56020830184805160030b8252602081015160030b60208301525050565b600060208284031215611ad757600080fd5b815167ffffffffffffffff811115611aee57600080fd5b8201601f81018413611aff57600080fd5b8051611b0d61189f82611811565b818152856020838501011115611b2257600080fd5b611b338260208301602086016118d7565b95945050505050565b60006020808385031215611b4f57600080fd5b825167ffffffffffffffff80821115611b6757600080fd5b818501915085601f830112611b7b57600080fd5b815181811115611b8d57611b8d61176a565b8060051b9150611b9e8483016117c2565b8181529183018401918481019088841115611bb857600080fd5b938501935b83851015611bd657845182529385019390850190611bbd565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060208284031215611c2357600080fd5b815180151581146104a557600080fd5b600060208284031215611c4557600080fd5b5051919050565b805163ffffffff81168114611c6057600080fd5b919050565b600060608284031215611c7757600080fd5b6040516060810181811067ffffffffffffffff82111715611c9a57611c9a61176a565b60405282518152611cad60208401611c4c565b6020820152604083015160038110611cc457600080fd5b60408201529392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8082018082111561070857610708611cd0565b600060208284031215611d2457600080fd5b8151600681106104a557600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b604081016107088284805160030b8252602081015160030b60208301525050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611db457611db4611cd0565b5060010190565b600060208284031215611dcd57600080fd5b6104a582611c4c565b63ffffffff818116838216019080821115611df357611df3611cd0565b5092915050565b600060208284031215611e0c57600080fd5b81516104a5816119e756fea2646970667358221220cd3bb77f8079c4fb30fd9b744573d276ebf0fa520dbb95b1a179e5071cceac9564736f6c63430008110033";

type BRMovePieceSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BRMovePieceSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BRMovePieceSystem__factory extends ContractFactory {
  constructor(...args: BRMovePieceSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BRMovePieceSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<BRMovePieceSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): BRMovePieceSystem {
    return super.attach(address) as BRMovePieceSystem;
  }
  override connect(signer: Signer): BRMovePieceSystem__factory {
    return super.connect(signer) as BRMovePieceSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BRMovePieceSystemInterface {
    return new utils.Interface(_abi) as BRMovePieceSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BRMovePieceSystem {
    return new Contract(address, _abi, signerOrProvider) as BRMovePieceSystem;
  }
}
