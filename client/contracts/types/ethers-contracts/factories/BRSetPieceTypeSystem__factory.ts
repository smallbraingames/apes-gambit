/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  BRSetPieceTypeSystem,
  BRSetPieceTypeSystemInterface,
} from "../BRSetPieceTypeSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BREntityNotGame",
    type: "error",
  },
  {
    inputs: [],
    name: "BRGameNotInProgress",
    type: "error",
  },
  {
    inputs: [],
    name: "BRNotEnoughPoints",
    type: "error",
  },
  {
    inputs: [],
    name: "BRNotInGame",
    type: "error",
  },
  {
    inputs: [],
    name: "BRPieceDead",
    type: "error",
  },
  {
    inputs: [],
    name: "NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "UnimplementedPieceType",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "arguments",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "piece",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "game",
        type: "uint256",
      },
      {
        internalType: "enum PieceType",
        name: "pieceType",
        type: "uint8",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620017cc380380620017cc833981016040819052620000349162000117565b600280546001600160a01b0319163317905581816001600160a01b038116156200005f5780620000c4565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200009e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000c4919062000156565b600080546001600160a01b039283166001600160a01b0319918216179091556001805494909216931692909217909155506200017d915050565b6001600160a01b03811681146200011457600080fd5b50565b600080604083850312156200012b57600080fd5b82516200013881620000fe565b60208401519092506200014b81620000fe565b809150509250929050565b6000602082840312156200016957600080fd5b81516200017681620000fe565b9392505050565b61163f806200018d6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309c5eabe1461005157806314b63f571461007a5780638da5cb5b1461008d578063f2fde38b146100b5575b600080fd5b61006461005f36600461114e565b6100ca565b60405161007191906111f2565b60405180910390f35b610064610088366004611253565b6103d6565b60025460405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610071565b6100c86100c33660046112ae565b61040e565b005b60606000806000848060200190518101906100e591906112cb565b600080549396509194509250906101329073ffffffffffffffffffffffffffffffffffffffff167f3aa78a206fc67ba4c2dbdbfa4f9637a0b391d7db261dacc2eb5d96f7b5693d97610522565b600080549192509061017a9073ffffffffffffffffffffffffffffffffffffffff167f1f26ebf637805df90fe5cf9a282dd66905185d55ff65696a9171e1a656152d39610522565b60008054919250906101c29073ffffffffffffffffffffffffffffffffffffffff167f4c5443efce5b9ecc79a1896dd0de307031c10094a3b3fc9a5d2b086c5b792de0610522565b600080549192509061020a9073ffffffffffffffffffffffffffffffffffffffff167f33c4aae4b327d551cc4ea42873cd8dcaa61f5bc0f248cf0e6dd3473f9a820d66610522565b60008054919250906102529073ffffffffffffffffffffffffffffffffffffffff167f3e4e98a8b24cd1e4f79528ef3f1cf7edfe0dbe0043563a44641446b8716086b4610522565b600080549192509061029a9073ffffffffffffffffffffffffffffffffffffffff167f3fe0524a97d46cff1be1703cd4a84d28fcc28e6c9bc09d2eedb2f0c75291a764610522565b60008054919250906102e29073ffffffffffffffffffffffffffffffffffffffff167f071fd7222c337f8cc12e5eda16f464c9a741636e3840e0490d89dc6df55b80b0610670565b90506102f487878787878f8f336106a9565b60006102ff896106de565b905061030c838c836107b2565b6040517fa140161800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83169063a140161890610360908e908d90600401611363565b6000604051808303816000875af115801561037f573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526103c59190810190611377565b505050505050505050505050919050565b60606104048484846040516020016103f0939291906113ee565b6040516020818303038152906040526100ca565b90505b9392505050565b60025473ffffffffffffffffffffffffffffffffffffffff163314610494576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f4f4e4c595f4f574e45520000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b60025460405173ffffffffffffffffffffffffffffffffffffffff8084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa158015610592573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526105d89190810190611411565b90508051600003610645576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f742072656769737465726564000000000000000000000000000000604482015260640161048b565b6106668160008151811061065b5761065b6114b7565b602002602001015190565b9150505b92915050565b60008061069d847f017c816a964927a00e050edd780dcf113ca2756dfa9e9fda94a05c140d9317b0610522565b90506106668184610522565b6106b5888885846109e8565b6106bf86836109f9565b6106ca858484610a5b565b6106d48484610aa2565b5050505050505050565b6000808260058111156106f3576106f36112f9565b0361070057506001919050565b6002826005811115610714576107146112f9565b14806107315750600182600581111561072f5761072f6112f9565b145b1561073e57506003919050565b6003826005811115610752576107526112f9565b0361075f57506005919050565b6004826005811115610773576107736112f9565b0361078057506009919050565b6040517f1ed6e93400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff84169063cccf7a8e90602401602060405180830381865afa15801561081d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084191906114e6565b610877576040517feb30efaf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810183905260009073ffffffffffffffffffffffffffffffffffffffff851690630ff4c91690602401602060405180830381865afa1580156108e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109099190611508565b90508063ffffffff168263ffffffff161115610951576040517feb30efaf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff841663d923c3c484610978858561152e565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b168152600481019290925263ffffffff166024820152604401600060405180830381600087803b1580156109d457600080fd5b505af11580156106d4573d6000803e3d6000fd5b6109f3848383610ae7565b50505050565b6000610a058383610b28565b9050600181602001516002811115610a1f57610a1f6112f9565b14610a56576040517f9c594b6100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b610a66838383610c92565b15610a7057505050565b6040517f95913fa700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610aac8282610de0565b15610ab5575050565b6040517ff9f7e24f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610af2838383610f10565b610a56576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60408051808201909152600080825260208201526040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff84169063cccf7a8e90602401602060405180830381865afa158015610ba7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bcb91906114e6565b610c01576040517f82203a4100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810183905260009073ffffffffffffffffffffffffffffffffffffffff851690630ff4c916906024016040805180830381865afa158015610c6e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106669190611579565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810183905260009073ffffffffffffffffffffffffffffffffffffffff85169063cccf7a8e90602401602060405180830381865afa158015610d00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d2491906114e6565b610d3057506000610407565b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810184905260009073ffffffffffffffffffffffffffffffffffffffff861690630ff4c91690602401602060405180830381865afa158015610d9e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dc291906115d3565b9050828103610dd5576001915050610407565b506000949350505050565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810182905260009073ffffffffffffffffffffffffffffffffffffffff84169063cccf7a8e90602401602060405180830381865afa158015610e4e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e7291906114e6565b610e7e5750600061066a565b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810183905260009073ffffffffffffffffffffffffffffffffffffffff851690630ff4c91690602401602060405180830381865afa158015610eec573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066691906114e6565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810183905260009073ffffffffffffffffffffffffffffffffffffffff85169063cccf7a8e90602401602060405180830381865afa158015610f7e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fa291906114e6565b610fae57506000610407565b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810184905260009073ffffffffffffffffffffffffffffffffffffffff861690630ff4c91690602401602060405180830381865afa15801561101c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061104091906115ec565b90508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461107f576000915050610407565b506001949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156111005761110061108a565b604052919050565b600067ffffffffffffffff8211156111225761112261108a565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b60006020828403121561116057600080fd5b813567ffffffffffffffff81111561117757600080fd5b8201601f8101841361118857600080fd5b803561119b61119682611108565b6110b9565b8181528560208385010111156111b057600080fd5b81602084016020830137600091810160200191909152949350505050565b60005b838110156111e95781810151838201526020016111d1565b50506000910152565b60208152600082518060208401526112118160408501602087016111ce565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b6006811061125057600080fd5b50565b60008060006060848603121561126857600080fd5b8335925060208401359150604084013561128181611243565b809150509250925092565b73ffffffffffffffffffffffffffffffffffffffff8116811461125057600080fd5b6000602082840312156112c057600080fd5b81356104078161128c565b6000806000606084860312156112e057600080fd5b8351925060208401519150604084015161128181611243565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6006811061135f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b828152604081016104076020830184611328565b60006020828403121561138957600080fd5b815167ffffffffffffffff8111156113a057600080fd5b8201601f810184136113b157600080fd5b80516113bf61119682611108565b8181528560208385010111156113d457600080fd5b6113e58260208301602086016111ce565b95945050505050565b83815260208101839052606081016114096040830184611328565b949350505050565b6000602080838503121561142457600080fd5b825167ffffffffffffffff8082111561143c57600080fd5b818501915085601f83011261145057600080fd5b8151818111156114625761146261108a565b8060051b91506114738483016110b9565b818152918301840191848101908884111561148d57600080fd5b938501935b838510156114ab57845182529385019390850190611492565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000602082840312156114f857600080fd5b8151801515811461040757600080fd5b60006020828403121561151a57600080fd5b815163ffffffff8116811461040757600080fd5b63ffffffff828116828216039080821115611572577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5092915050565b60006040828403121561158b57600080fd5b6040516040810181811067ffffffffffffffff821117156115ae576115ae61108a565b604052825181526020830151600381106115c757600080fd5b60208201529392505050565b6000602082840312156115e557600080fd5b5051919050565b6000602082840312156115fe57600080fd5b81516104078161128c56fea26469706673582212205d72945b90233440c48b1e1c9978b31ba907205d35b126e2482601890d3348f864736f6c63430008110033";

type BRSetPieceTypeSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BRSetPieceTypeSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BRSetPieceTypeSystem__factory extends ContractFactory {
  constructor(...args: BRSetPieceTypeSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BRSetPieceTypeSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<BRSetPieceTypeSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): BRSetPieceTypeSystem {
    return super.attach(address) as BRSetPieceTypeSystem;
  }
  override connect(signer: Signer): BRSetPieceTypeSystem__factory {
    return super.connect(signer) as BRSetPieceTypeSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BRSetPieceTypeSystemInterface {
    return new utils.Interface(_abi) as BRSetPieceTypeSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BRSetPieceTypeSystem {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as BRSetPieceTypeSystem;
  }
}
