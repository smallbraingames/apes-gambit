/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  SetPieceNameSystem,
  SetPieceNameSystemInterface,
} from "../SetPieceNameSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "arguments",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000e7238038062000e7283398101604081905262000034916200022c565b818162000041336200010f565b6001600160a01b03811615620000585780620000bd565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000097573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bd91906200026b565b600080546001600160a01b03199081166001600160a01b0393841690811790925560018054909116928516928317905562000105919062000183602090811b6200030a17901c565b5050505062000292565b600062000126620001ef60201b6200039b1760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a8780546001600160a01b039384166001600160a01b0319918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6001600160a01b03811681146200022957600080fd5b50565b600080604083850312156200024057600080fd5b82516200024d8162000213565b6020840151909250620002608162000213565b809150509250929050565b6000602082840312156200027e57600080fd5b81516200028b8162000213565b9392505050565b610bd080620002a26000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309c5eabe1461005157806368c47df21461007a5780638da5cb5b1461008d578063f2fde38b146100ba575b600080fd5b61006461005f366004610886565b6100cf565b604051610071919061093d565b60405180910390f35b610064610088366004610950565b610216565b610095610249565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610071565b6100cd6100c83660046109cd565b61028e565b005b6060600080838060200190518101906100e891906109ea565b60008054929450909250906101339073ffffffffffffffffffffffffffffffffffffffff167f3aa78a206fc67ba4c2dbdbfa4f9637a0b391d7db261dacc2eb5d96f7b5693d976103bf565b905061014081843361050f565b600080546101849073ffffffffffffffffffffffffffffffffffffffff167fa584515f2273fad14d3c759d354d23374dec542bc978d7147c47e681a7b4649e6103bf565b6040517f6437197700000000000000000000000000000000000000000000000000000000815290915073ffffffffffffffffffffffffffffffffffffffff8216906364371977906101db9087908790600401610a6d565b600060405180830381600087803b1580156101f557600080fd5b505af1158015610209573d6000803e3d6000fd5b5050505050505050919050565b6060610242838360405160200161022e929190610a6d565b6040516020818303038152906040526100cf565b9392505050565b60006102897f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1633146102fe576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61030781610555565b50565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a87805473ffffffffffffffffffffffffffffffffffffffff9384167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa15801561042f573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526104759190810190610a86565b905080516000036104e6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f742072656769737465726564000000000000000000000000000000604482015260640160405180910390fd5b610507816000815181106104fc576104fc610b2c565b602002602001015190565b949350505050565b61051a83838361055e565b610550576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b610307816106d8565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810183905260009073ffffffffffffffffffffffffffffffffffffffff85169063cccf7a8e90602401602060405180830381865afa1580156105cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f09190610b5b565b6105fc57506000610242565b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810184905260009073ffffffffffffffffffffffffffffffffffffffff861690630ff4c91690602401602060405180830381865afa15801561066a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068e9190610b7d565b90508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146106cd576000915050610242565b506001949350505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460805460405173ffffffffffffffffffffffffffffffffffffffff8481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156107fa576107fa610784565b604052919050565b600067ffffffffffffffff82111561081c5761081c610784565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600061085b61085684610802565b6107b3565b905082815283838301111561086f57600080fd5b828260208301376000602084830101529392505050565b60006020828403121561089857600080fd5b813567ffffffffffffffff8111156108af57600080fd5b8201601f810184136108c057600080fd5b61050784823560208401610848565b60005b838110156108ea5781810151838201526020016108d2565b50506000910152565b6000815180845261090b8160208601602086016108cf565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60208152600061024260208301846108f3565b6000806040838503121561096357600080fd5b82359150602083013567ffffffffffffffff81111561098157600080fd5b8301601f8101851361099257600080fd5b6109a185823560208401610848565b9150509250929050565b73ffffffffffffffffffffffffffffffffffffffff8116811461030757600080fd5b6000602082840312156109df57600080fd5b8135610242816109ab565b600080604083850312156109fd57600080fd5b82519150602083015167ffffffffffffffff811115610a1b57600080fd5b8301601f81018513610a2c57600080fd5b8051610a3a61085682610802565b818152866020838501011115610a4f57600080fd5b610a608260208301602086016108cf565b8093505050509250929050565b82815260406020820152600061050760408301846108f3565b60006020808385031215610a9957600080fd5b825167ffffffffffffffff80821115610ab157600080fd5b818501915085601f830112610ac557600080fd5b815181811115610ad757610ad7610784565b8060051b9150610ae88483016107b3565b8181529183018401918481019088841115610b0257600080fd5b938501935b83851015610b2057845182529385019390850190610b07565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060208284031215610b6d57600080fd5b8151801515811461024257600080fd5b600060208284031215610b8f57600080fd5b8151610242816109ab56fea26469706673582212205a0c76db385e7dc6fbfa51aa33d4ea0aeaa26cc1d97885928e5d096b99bfef6764736f6c63430008110033";

type SetPieceNameSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SetPieceNameSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SetPieceNameSystem__factory extends ContractFactory {
  constructor(...args: SetPieceNameSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SetPieceNameSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<SetPieceNameSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): SetPieceNameSystem {
    return super.attach(address) as SetPieceNameSystem;
  }
  override connect(signer: Signer): SetPieceNameSystem__factory {
    return super.connect(signer) as SetPieceNameSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SetPieceNameSystemInterface {
    return new utils.Interface(_abi) as SetPieceNameSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SetPieceNameSystem {
    return new Contract(address, _abi, signerOrProvider) as SetPieceNameSystem;
  }
}
