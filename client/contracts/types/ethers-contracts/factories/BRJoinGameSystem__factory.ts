/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  BRJoinGameSystem,
  BRJoinGameSystemInterface,
} from "../BRJoinGameSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BRAlreadyInGame",
    type: "error",
  },
  {
    inputs: [],
    name: "BREntityNotGame",
    type: "error",
  },
  {
    inputs: [],
    name: "BRGameAlreadyStarted",
    type: "error",
  },
  {
    inputs: [],
    name: "NotOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "arguments",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "piece",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "game",
        type: "uint256",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620010d6380380620010d6833981016040819052620000349162000117565b600280546001600160a01b0319163317905581816001600160a01b038116156200005f5780620000c4565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200009e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000c4919062000156565b600080546001600160a01b039283166001600160a01b0319918216179091556001805494909216931692909217909155506200017d915050565b6001600160a01b03811681146200011457600080fd5b50565b600080604083850312156200012b57600080fd5b82516200013881620000fe565b60208401519092506200014b81620000fe565b809150509250929050565b6000602082840312156200016957600080fd5b81516200017681620000fe565b9392505050565b610f49806200018d6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309c5eabe146100515780638da5cb5b1461007a578063915657fb146100a2578063f2fde38b146100b5575b600080fd5b61006461005f366004610bcf565b6100ca565b6040516100719190610c82565b60405180910390f35b60025460405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610071565b6100646100b0366004610cee565b610453565b6100c86100c3366004610d35565b61048f565b005b6060600080838060200190518101906100e39190610d52565b600080549294509092509061012e9073ffffffffffffffffffffffffffffffffffffffff167f3aa78a206fc67ba4c2dbdbfa4f9637a0b391d7db261dacc2eb5d96f7b5693d976105a3565b60008054919250906101769073ffffffffffffffffffffffffffffffffffffffff167f1f26ebf637805df90fe5cf9a282dd66905185d55ff65696a9171e1a656152d396105a3565b60008054919250906101be9073ffffffffffffffffffffffffffffffffffffffff167f4c5443efce5b9ecc79a1896dd0de307031c10094a3b3fc9a5d2b086c5b792de06105a3565b60008054919250906102069073ffffffffffffffffffffffffffffffffffffffff167f33c4aae4b327d551cc4ea42873cd8dcaa61f5bc0f248cf0e6dd3473f9a820d666105a3565b600080549192509061024e9073ffffffffffffffffffffffffffffffffffffffff167f3e4e98a8b24cd1e4f79528ef3f1cf7edfe0dbe0043563a44641446b8716086b46105a3565b60008054919250906102969073ffffffffffffffffffffffffffffffffffffffff167f3fe0524a97d46cff1be1703cd4a84d28fcc28e6c9bc09d2eedb2f0c75291a7646105a3565b90506102a486868a336106ef565b6102ae8488610700565b6102b88389610762565b6040517f1ab06ee5000000000000000000000000000000000000000000000000000000008152600481018990526024810188905273ffffffffffffffffffffffffffffffffffffffff841690631ab06ee590604401600060405180830381600087803b15801561032757600080fd5b505af115801561033b573d6000803e3d6000fd5b50506040517f60fe47b1000000000000000000000000000000000000000000000000000000008152600481018b905273ffffffffffffffffffffffffffffffffffffffff851692506360fe47b19150602401600060405180830381600087803b1580156103a757600080fd5b505af11580156103bb573d6000803e3d6000fd5b50506040517fd923c3c4000000000000000000000000000000000000000000000000000000008152600481018b90526008602482015273ffffffffffffffffffffffffffffffffffffffff8416925063d923c3c49150604401600060405180830381600087803b15801561042e57600080fd5b505af1158015610442573d6000803e3d6000fd5b505050505050505050505050919050565b60606104888383604051602001610474929190918252602082015260400190565b6040516020818303038152906040526100ca565b9392505050565b60025473ffffffffffffffffffffffffffffffffffffffff163314610515576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f4f4e4c595f4f574e45520000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b60025460405173ffffffffffffffffffffffffffffffffffffffff8084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa158015610613573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526106599190810190610d76565b905080516000036106c6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f742072656769737465726564000000000000000000000000000000604482015260640161050c565b6106e7816000815181106106dc576106dc610e1c565b602002602001015190565b949350505050565b6106fa84838361082c565b50505050565b600061070c838361086d565b905060008160200151600281111561072657610726610e4b565b1461075d576040517f4221b8ac00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810182905273ffffffffffffffffffffffffffffffffffffffff83169063cccf7a8e90602401602060405180830381865afa1580156107cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f19190610e7a565b15610828576040517f4be0fd3a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b6108378383836109d7565b61075d576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60408051808201909152600080825260208201526040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff84169063cccf7a8e90602401602060405180830381865afa1580156108ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109109190610e7a565b610946576040517f82203a4100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810183905260009073ffffffffffffffffffffffffffffffffffffffff851690630ff4c916906024016040805180830381865afa1580156109b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e79190610e9c565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810183905260009073ffffffffffffffffffffffffffffffffffffffff85169063cccf7a8e90602401602060405180830381865afa158015610a45573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a699190610e7a565b610a7557506000610488565b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810184905260009073ffffffffffffffffffffffffffffffffffffffff861690630ff4c91690602401602060405180830381865afa158015610ae3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b079190610ef6565b90508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610b46576000915050610488565b506001949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610bc757610bc7610b51565b604052919050565b60006020808385031215610be257600080fd5b823567ffffffffffffffff80821115610bfa57600080fd5b818501915085601f830112610c0e57600080fd5b813581811115610c2057610c20610b51565b610c50847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601610b80565b91508082528684828501011115610c6657600080fd5b8084840185840137600090820190930192909252509392505050565b600060208083528351808285015260005b81811015610caf57858101830151858201604001528201610c93565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b60008060408385031215610d0157600080fd5b50508035926020909101359150565b73ffffffffffffffffffffffffffffffffffffffff81168114610d3257600080fd5b50565b600060208284031215610d4757600080fd5b813561048881610d10565b60008060408385031215610d6557600080fd5b505080516020909101519092909150565b60006020808385031215610d8957600080fd5b825167ffffffffffffffff80821115610da157600080fd5b818501915085601f830112610db557600080fd5b815181811115610dc757610dc7610b51565b8060051b9150610dd8848301610b80565b8181529183018401918481019088841115610df257600080fd5b938501935b83851015610e1057845182529385019390850190610df7565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600060208284031215610e8c57600080fd5b8151801515811461048857600080fd5b600060408284031215610eae57600080fd5b6040516040810181811067ffffffffffffffff82111715610ed157610ed1610b51565b60405282518152602083015160038110610eea57600080fd5b60208201529392505050565b600060208284031215610f0857600080fd5b815161048881610d1056fea26469706673582212206ecb225a9aa821f7e5da63b6bb4396401c45789fafc5997b99aecb7d504e0e8a64736f6c63430008110033";

type BRJoinGameSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BRJoinGameSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BRJoinGameSystem__factory extends ContractFactory {
  constructor(...args: BRJoinGameSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BRJoinGameSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<BRJoinGameSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): BRJoinGameSystem {
    return super.attach(address) as BRJoinGameSystem;
  }
  override connect(signer: Signer): BRJoinGameSystem__factory {
    return super.connect(signer) as BRJoinGameSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BRJoinGameSystemInterface {
    return new utils.Interface(_abi) as BRJoinGameSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BRJoinGameSystem {
    return new Contract(address, _abi, signerOrProvider) as BRJoinGameSystem;
  }
}
