/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  MovePieceSystem,
  MovePieceSystemInterface,
} from "../MovePieceSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CannotControl",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMove",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "UnimplementedPieceType",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "arguments",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "int32",
            name: "x",
            type: "int32",
          },
          {
            internalType: "int32",
            name: "y",
            type: "int32",
          },
        ],
        internalType: "struct Coord",
        name: "position",
        type: "tuple",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620017c7380380620017c783398101604081905262000034916200022c565b818162000041336200010f565b6001600160a01b03811615620000585780620000bd565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000097573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bd91906200026b565b600080546001600160a01b03199081166001600160a01b0393841690811790925560018054909116928516928317905562000105919062000183602090811b6200050617901c565b5050505062000292565b600062000126620001ef60201b620005971760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a8780546001600160a01b039384166001600160a01b0319918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6001600160a01b03811681146200022957600080fd5b50565b600080604083850312156200024057600080fd5b82516200024d8162000213565b6020840151909250620002608162000213565b809150509250929050565b6000602082840312156200027e57600080fd5b81516200028b8162000213565b9392505050565b61152580620002a26000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309c5eabe146100515780638da5cb5b1461007a578063f2f9a0ab146100a7578063f2fde38b146100ba575b600080fd5b61006461005f366004611006565b6100cf565b60405161007191906110b9565b60405180910390f35b6100826103f1565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610071565b6100646100b5366004611134565b610436565b6100cd6100c83660046111d5565b61048a565b005b6060600080838060200190518101906100e89190611234565b60008054929450909250906101339073ffffffffffffffffffffffffffffffffffffffff167f3aa78a206fc67ba4c2dbdbfa4f9637a0b391d7db261dacc2eb5d96f7b5693d976105bb565b600080549192509061017b9073ffffffffffffffffffffffffffffffffffffffff167f1f26ebf637805df90fe5cf9a282dd66905185d55ff65696a9171e1a656152d396105bb565b60008054919250906101c39073ffffffffffffffffffffffffffffffffffffffff167fd43e0d138a55035def2f150c31798e941af349936fa84a9e5eda703a2e41218b6105bb565b600080549192509061020b9073ffffffffffffffffffffffffffffffffffffffff167f023253b2241a10d36b8c9af452236123ad9f4644f2ef4963970b2c4b77c42db56105bb565b90506102198385883361070b565b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810187905260009073ffffffffffffffffffffffffffffffffffffffff831690630ff4c916906024016040805180830381865afa158015610286573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102aa9190611261565b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810189905290915060009073ffffffffffffffffffffffffffffffffffffffff851690630ff4c91690602401602060405180830381865afa15801561031b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033f919061127d565b905061034c828883610773565b6040517fdcb14c2f000000000000000000000000000000000000000000000000000000008152600481018990528751600390810b60248301526020890151900b604482015273ffffffffffffffffffffffffffffffffffffffff84169063dcb14c2f90606401600060405180830381600087803b1580156103cc57600080fd5b505af11580156103e0573d6000803e3d6000fd5b505050505050505050505050919050565b60006104317f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b6060610481838360405160200161046d9291909182528051600390810b60208085019190915290910151900b604082015260600190565b6040516020818303038152906040526100cf565b90505b92915050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1633146104fa576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610503816107b9565b50565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a87805473ffffffffffffffffffffffffffffffffffffffff9384167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa15801561062b573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610671919081019061129e565b905080516000036106e2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f742072656769737465726564000000000000000000000000000000604482015260640160405180910390fd5b610703816000815181106106f8576106f8611344565b602002602001015190565b949350505050565b6107168483836107c2565b61076d576107248483610994565b1580156107375750610737838383610aef565b61076d576040517fc49f4b4900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505050565b61077e838383610c69565b6107b4576040517f87822d3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b61050381610d75565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810183905260009073ffffffffffffffffffffffffffffffffffffffff85169063cccf7a8e90602401602060405180830381865afa158015610830573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108549190611373565b6108605750600061098d565b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810184905260009073ffffffffffffffffffffffffffffffffffffffff861690630ff4c91690602401600060405180830381865afa1580156108ce573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610914919081019061129e565b905060005b8151811015610986578373ffffffffffffffffffffffffffffffffffffffff1661094e8383815181106106f8576106f8611344565b73ffffffffffffffffffffffffffffffffffffffff16036109745760019250505061098d565b8061097e816113c4565b915050610919565b5060009150505b9392505050565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810182905260009073ffffffffffffffffffffffffffffffffffffffff84169063cccf7a8e90602401602060405180830381865afa158015610a02573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a269190611373565b610a3257506000610484565b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810183905260009073ffffffffffffffffffffffffffffffffffffffff851690630ff4c91690602401600060405180830381865afa158015610aa0573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610ae6919081019061129e565b51949350505050565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810183905260009073ffffffffffffffffffffffffffffffffffffffff85169063cccf7a8e90602401602060405180830381865afa158015610b5d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b819190611373565b610b8d5750600061098d565b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810184905260009073ffffffffffffffffffffffffffffffffffffffff861690630ff4c91690602401602060405180830381865afa158015610bfb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c1f91906113fc565b90508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610c5e57600091505061098d565b506001949350505050565b600080826005811115610c7e57610c7e611419565b03610c9457610c8d8484610e21565b905061098d565b6001826005811115610ca857610ca8611419565b03610cb757610c8d8484610e74565b6002826005811115610ccb57610ccb611419565b03610cda57610c8d8484610eb8565b6003826005811115610cee57610cee611419565b03610cfd57610c8d8484610efa565b6004826005811115610d1157610d11611419565b03610d2057610c8d8484610f24565b6005826005811115610d3457610d34611419565b03610d4357610c8d8484610e21565b6040517f1ed6e93400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460805460405173ffffffffffffffffffffffffffffffffffffffff8481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b80518251600091600191610e3d91610e3891611448565b610f40565b63ffffffff161115801561048157506001610e6583602001518560200151610e389190611448565b63ffffffff1611159392505050565b6000610e8d82602001518460200151610e389190611448565b63ffffffff16610eaa83600001518560000151610e389190611448565b63ffffffff16149392505050565b6000610ee982602001518460200151610ed19190611448565b83518551610edf9190611448565b610e38919061148a565b63ffffffff16600214905092915050565b80518251600091600391820b910b1480610481575050602090810151910151600391820b910b1490565b6000610f308383610e74565b8061048157506104818383610efa565b6000808260030b1215610f5b57610f56826114b1565b610484565b5090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715610fb157610fb1610f5f565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610ffe57610ffe610f5f565b604052919050565b6000602080838503121561101957600080fd5b823567ffffffffffffffff8082111561103157600080fd5b818501915085601f83011261104557600080fd5b81358181111561105757611057610f5f565b611087847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601610fb7565b9150808252868482850101111561109d57600080fd5b8084840185840137600090820190930192909252509392505050565b600060208083528351808285015260005b818110156110e6578581018301518582016040015282016110ca565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b8060030b811461050357600080fd5b600080828403606081121561114857600080fd5b8335925060407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08201121561117c57600080fd5b50611185610f8e565b602084013561119381611125565b815260408401356111a381611125565b6020820152919491935090915050565b73ffffffffffffffffffffffffffffffffffffffff8116811461050357600080fd5b6000602082840312156111e757600080fd5b813561098d816111b3565b60006040828403121561120457600080fd5b61120c610f8e565b9050815161121981611125565b8152602082015161122981611125565b602082015292915050565b6000806060838503121561124757600080fd5b8251915061125884602085016111f2565b90509250929050565b60006040828403121561127357600080fd5b61048183836111f2565b60006020828403121561128f57600080fd5b81516006811061098d57600080fd5b600060208083850312156112b157600080fd5b825167ffffffffffffffff808211156112c957600080fd5b818501915085601f8301126112dd57600080fd5b8151818111156112ef576112ef610f5f565b8060051b9150611300848301610fb7565b818152918301840191848101908884111561131a57600080fd5b938501935b838510156113385784518252938501939085019061131f565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006020828403121561138557600080fd5b8151801515811461098d57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036113f5576113f5611395565b5060010190565b60006020828403121561140e57600080fd5b815161098d816111b3565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600382810b9082900b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffff800000008112637fffffff8213171561048457610484611395565b60008260030b8260030b028060030b91508082146114aa576114aa611395565b5092915050565b60008160030b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffff8000000081036114e6576114e6611395565b6000039291505056fea264697066735822122094b319aa83b34d60c3650e45afdc331acbbee8ef4ff58923e454e866c24d682164736f6c63430008110033";

type MovePieceSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MovePieceSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MovePieceSystem__factory extends ContractFactory {
  constructor(...args: MovePieceSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MovePieceSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<MovePieceSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): MovePieceSystem {
    return super.attach(address) as MovePieceSystem;
  }
  override connect(signer: Signer): MovePieceSystem__factory {
    return super.connect(signer) as MovePieceSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MovePieceSystemInterface {
    return new utils.Interface(_abi) as MovePieceSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MovePieceSystem {
    return new Contract(address, _abi, signerOrProvider) as MovePieceSystem;
  }
}
