/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  MovePieceSystem,
  MovePieceSystemInterface,
} from "../MovePieceSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CannotControl",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMove",
    type: "error",
  },
  {
    inputs: [],
    name: "UnimplementedPieceType",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "arguments",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "int32",
            name: "x",
            type: "int32",
          },
          {
            internalType: "int32",
            name: "y",
            type: "int32",
          },
        ],
        internalType: "struct Coord",
        name: "position",
        type: "tuple",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200159538038062001595833981016040819052620000349162000117565b600280546001600160a01b0319163317905581816001600160a01b038116156200005f5780620000c4565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200009e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000c4919062000156565b600080546001600160a01b039283166001600160a01b0319918216179091556001805494909216931692909217909155506200017d915050565b6001600160a01b03811681146200011457600080fd5b50565b600080604083850312156200012b57600080fd5b82516200013881620000fe565b60208401519092506200014b81620000fe565b809150509250929050565b6000602082840312156200016957600080fd5b81516200017681620000fe565b9392505050565b611408806200018d6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309c5eabe146100515780638da5cb5b1461007a578063f2f9a0ab146100a2578063f2fde38b146100b5575b600080fd5b61006461005f366004610ee6565b6100ca565b6040516100719190610f99565b60405180910390f35b60025460405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610071565b6100646100b0366004611017565b6103ec565b6100c86100c33660046110b8565b610440565b005b6060600080838060200190518101906100e39190611117565b600080549294509092509061012e9073ffffffffffffffffffffffffffffffffffffffff167f3aa78a206fc67ba4c2dbdbfa4f9637a0b391d7db261dacc2eb5d96f7b5693d97610554565b60008054919250906101769073ffffffffffffffffffffffffffffffffffffffff167f1f26ebf637805df90fe5cf9a282dd66905185d55ff65696a9171e1a656152d39610554565b60008054919250906101be9073ffffffffffffffffffffffffffffffffffffffff167fd43e0d138a55035def2f150c31798e941af349936fa84a9e5eda703a2e41218b610554565b60008054919250906102069073ffffffffffffffffffffffffffffffffffffffff167f023253b2241a10d36b8c9af452236123ad9f4644f2ef4963970b2c4b77c42db5610554565b9050610214838588336106a0565b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810187905260009073ffffffffffffffffffffffffffffffffffffffff831690630ff4c916906024016040805180830381865afa158015610281573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a59190611144565b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810189905290915060009073ffffffffffffffffffffffffffffffffffffffff851690630ff4c91690602401602060405180830381865afa158015610316573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033a9190611160565b9050610347828883610708565b6040517fdcb14c2f000000000000000000000000000000000000000000000000000000008152600481018990528751600390810b60248301526020890151900b604482015273ffffffffffffffffffffffffffffffffffffffff84169063dcb14c2f90606401600060405180830381600087803b1580156103c757600080fd5b505af11580156103db573d6000803e3d6000fd5b505050505050505050505050919050565b606061043783836040516020016104239291909182528051600390810b60208085019190915290910151900b604082015260600190565b6040516020818303038152906040526100ca565b90505b92915050565b60025473ffffffffffffffffffffffffffffffffffffffff1633146104c6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f4f4e4c595f4f574e45520000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b60025460405173ffffffffffffffffffffffffffffffffffffffff8084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa1580156105c4573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261060a9190810190611181565b90508051600003610677576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f74207265676973746572656400000000000000000000000000000060448201526064016104bd565b6106988160008151811061068d5761068d611227565b602002602001015190565b949350505050565b6106ab84838361074e565b610702576106b98483610920565b1580156106cc57506106cc838383610a7b565b610702576040517fc49f4b4900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505050565b610713838383610bf5565b610749576040517f87822d3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810183905260009073ffffffffffffffffffffffffffffffffffffffff85169063cccf7a8e90602401602060405180830381865afa1580156107bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e09190611256565b6107ec57506000610919565b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810184905260009073ffffffffffffffffffffffffffffffffffffffff861690630ff4c91690602401600060405180830381865afa15801561085a573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526108a09190810190611181565b905060005b8151811015610912578373ffffffffffffffffffffffffffffffffffffffff166108da83838151811061068d5761068d611227565b73ffffffffffffffffffffffffffffffffffffffff160361090057600192505050610919565b8061090a816112a7565b9150506108a5565b5060009150505b9392505050565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810182905260009073ffffffffffffffffffffffffffffffffffffffff84169063cccf7a8e90602401602060405180830381865afa15801561098e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b29190611256565b6109be5750600061043a565b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810183905260009073ffffffffffffffffffffffffffffffffffffffff851690630ff4c91690602401600060405180830381865afa158015610a2c573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610a729190810190611181565b51949350505050565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810183905260009073ffffffffffffffffffffffffffffffffffffffff85169063cccf7a8e90602401602060405180830381865afa158015610ae9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b0d9190611256565b610b1957506000610919565b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810184905260009073ffffffffffffffffffffffffffffffffffffffff861690630ff4c91690602401602060405180830381865afa158015610b87573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bab91906112df565b90508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610bea576000915050610919565b506001949350505050565b600080826005811115610c0a57610c0a6112fc565b03610c2057610c198484610d01565b9050610919565b6001826005811115610c3457610c346112fc565b03610c4357610c198484610d54565b6002826005811115610c5757610c576112fc565b03610c6657610c198484610d98565b6003826005811115610c7a57610c7a6112fc565b03610c8957610c198484610dda565b6004826005811115610c9d57610c9d6112fc565b03610cac57610c198484610e04565b6005826005811115610cc057610cc06112fc565b03610ccf57610c198484610d01565b6040517f1ed6e93400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80518251600091600191610d1d91610d189161132b565b610e20565b63ffffffff161115801561043757506001610d4583602001518560200151610d18919061132b565b63ffffffff1611159392505050565b6000610d6d82602001518460200151610d18919061132b565b63ffffffff16610d8a83600001518560000151610d18919061132b565b63ffffffff16149392505050565b6000610dc982602001518460200151610db1919061132b565b83518551610dbf919061132b565b610d18919061136d565b63ffffffff16600214905092915050565b80518251600091600391820b910b1480610437575050602090810151910151600391820b910b1490565b6000610e108383610d54565b8061043757506104378383610dda565b6000808260030b1215610e3b57610e3682611394565b61043a565b5090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715610e9157610e91610e3f565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610ede57610ede610e3f565b604052919050565b60006020808385031215610ef957600080fd5b823567ffffffffffffffff80821115610f1157600080fd5b818501915085601f830112610f2557600080fd5b813581811115610f3757610f37610e3f565b610f67847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601610e97565b91508082528684828501011115610f7d57600080fd5b8084840185840137600090820190930192909252509392505050565b600060208083528351808285015260005b81811015610fc657858101830151858201604001528201610faa565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b8060030b811461101457600080fd5b50565b600080828403606081121561102b57600080fd5b8335925060407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08201121561105f57600080fd5b50611068610e6e565b602084013561107681611005565b8152604084013561108681611005565b6020820152919491935090915050565b73ffffffffffffffffffffffffffffffffffffffff8116811461101457600080fd5b6000602082840312156110ca57600080fd5b813561091981611096565b6000604082840312156110e757600080fd5b6110ef610e6e565b905081516110fc81611005565b8152602082015161110c81611005565b602082015292915050565b6000806060838503121561112a57600080fd5b8251915061113b84602085016110d5565b90509250929050565b60006040828403121561115657600080fd5b61043783836110d5565b60006020828403121561117257600080fd5b81516006811061091957600080fd5b6000602080838503121561119457600080fd5b825167ffffffffffffffff808211156111ac57600080fd5b818501915085601f8301126111c057600080fd5b8151818111156111d2576111d2610e3f565b8060051b91506111e3848301610e97565b81815291830184019184810190888411156111fd57600080fd5b938501935b8385101561121b57845182529385019390850190611202565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006020828403121561126857600080fd5b8151801515811461091957600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036112d8576112d8611278565b5060010190565b6000602082840312156112f157600080fd5b815161091981611096565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600382810b9082900b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffff800000008112637fffffff8213171561043a5761043a611278565b60008260030b8260030b028060030b915080821461138d5761138d611278565b5092915050565b60008160030b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffff8000000081036113c9576113c9611278565b6000039291505056fea264697066735822122011b234b9e863d348275340ffa8c5d81ff389369b2fcfc8962928e040ffde188c64736f6c63430008110033";

type MovePieceSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MovePieceSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MovePieceSystem__factory extends ContractFactory {
  constructor(...args: MovePieceSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MovePieceSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<MovePieceSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): MovePieceSystem {
    return super.attach(address) as MovePieceSystem;
  }
  override connect(signer: Signer): MovePieceSystem__factory {
    return super.connect(signer) as MovePieceSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MovePieceSystemInterface {
    return new utils.Interface(_abi) as MovePieceSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MovePieceSystem {
    return new Contract(address, _abi, signerOrProvider) as MovePieceSystem;
  }
}
