/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  BRPreviousMoveTimestampComponent,
  BRPreviousMoveTimestampComponentInterface,
} from "../BRPreviousMoveTimestampComponent";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "world",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BareComponent__NotImplemented",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnableWritable__NotWriter",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "authorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getEntities",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "getEntitiesWithValue",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getRawValue",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSchema",
    outputs: [
      {
        internalType: "string[]",
        name: "keys",
        type: "string[]",
      },
      {
        internalType: "enum LibTypes.SchemaValue[]",
        name: "values",
        type: "uint8[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "has",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "registerIndexer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_world",
        type: "address",
      },
    ],
    name: "registerWorld",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "unauthorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "world",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "writeAccess",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200148838038062001488833981016040819052620000349162000204565b807f6f6c09948e327abfd3c44b7965920048be367af522273db94a5172d20538b9ac818162000063336200008e565b60028190556001600160a01b038216156200008357620000838262000102565b505050505062000236565b6000620000a5620001ba60201b62000a0f1760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b6200010c620001de565b6001600160a01b0316336001600160a01b0316146200013e57604051632f7a8ee160e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b038316908117909155600254604051630f30347760e41b8152306004820152602481019190915263f303477090604401600060405180830381600087803b1580156200019e57600080fd5b505af1158015620001b3573d6000803e3d6000fd5b5050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000620001f5620001ba60201b62000a0f1760201c565b546001600160a01b0316919050565b6000602082840312156200021757600080fd5b81516001600160a01b03811681146200022f57600080fd5b9392505050565b61124280620002466000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c80638b282947116100b2578063b361be4611610081578063bf4fe57e11610066578063bf4fe57e146102ac578063cccf7a8e146102bf578063f2fde38b146102d257600080fd5b8063b361be4614610279578063b8bc073d1461028c57600080fd5b80638b282947146102425780638da5cb5b146102555780639d2c76b41461025d578063af640d0f1461027057600080fd5b80634cc82215116101095780636b122fe0116100ee5780636b122fe0146101f657806375c0669c1461020c578063861eb9051461021f57600080fd5b80634cc82215146101d05780634fef6a38146101e357600080fd5b80630ff4c9161461013b5780631ab06ee51461016157806330b67baa1461017657806331b933b9146101bb575b600080fd5b61014e610149366004610c4a565b6102e5565b6040519081526020015b60405180910390f35b61017461016f366004610c63565b61030b565b005b6000546101969073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610158565b6101c361033a565b6040516101589190610c85565b6101746101de366004610c4a565b61036e565b6101746101f1366004610cc9565b6103b9565b6101fe610497565b604051610158929190610d92565b61017461021a366004610cc9565b610583565b61023261022d366004610cc9565b6105b5565b6040519015158152602001610158565b610174610250366004610f5c565b610640565b610196610689565b61017461026b366004610cc9565b6106ce565b61014e60025481565b6101c3610287366004610fa3565b61033a565b61029f61029a366004610c4a565b6107f7565b6040516101589190610fe0565b6101746102ba366004610cc9565b610899565b6102326102cd366004610c4a565b610974565b6101746102e0366004610cc9565b610996565b6000806102f1836107f7565b8060200190518101906103049190610ff3565b9392505050565b610336828260405160200161032291815260200190565b604051602081830303815290604052610640565b5050565b60606040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610377336105b5565b6103ad576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103b681610a33565b50565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610429576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b604080516001808252818301909252606091829190816020015b60608152602001906001900390816104b1575050604080516001808252818301909252919350602080830190803683370190505090506040518060400160405280600581526020017f76616c7565000000000000000000000000000000000000000000000000000000815250826000815181106105305761053061100c565b6020026020010181905250600d816000815181106105505761055061100c565b6020026020010190602181111561056957610569610d63565b9081602181111561057c5761057c610d63565b9052509091565b6040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff811660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c909602052604081205460ff168061063a575061060b610689565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b92915050565b610649336105b5565b61067f576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103368282610aa1565b60006106c97f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff16331461073e576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556002546040517ff3034770000000000000000000000000000000000000000000000000000000008152306004820152602481019190915263f3034770906044015b600060405180830381600087803b1580156107dc57600080fd5b505af11580156107f0573d6000803e3d6000fd5b5050505050565b60008181526001602052604090208054606091906108149061103b565b80601f01602080910402602001604051908101604052809291908181526020018280546108409061103b565b801561088d5780601f106108625761010080835404028352916020019161088d565b820191906000526020600020905b81548152906001019060200180831161087057829003601f168201915b50505050509050919050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610909576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b6000818152600160205260408120805461098d9061103b565b15159392505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610a06576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103b681610b48565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000818152600160205260408120610a4a91610bfc565b6000546040517f0de3b7b50000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff90911690630de3b7b5906024016107c2565b6000828152600160205260409020610ab982826110d9565b506000546040517fcfd3c57f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063cfd3c57f90610b1290859085906004016111f3565b600060405180830381600087803b158015610b2c57600080fd5b505af1158015610b40573d6000803e3d6000fd5b505050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516103b6928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b508054610c089061103b565b6000825580601f10610c18575050565b601f0160209004906000526020600020908101906103b691905b80821115610c465760008155600101610c32565b5090565b600060208284031215610c5c57600080fd5b5035919050565b60008060408385031215610c7657600080fd5b50508035926020909101359150565b6020808252825182820181905260009190848201906040850190845b81811015610cbd57835183529284019291840191600101610ca1565b50909695505050505050565b600060208284031215610cdb57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461030457600080fd5b6000815180845260005b81811015610d2557602081850181015186830182015201610d09565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b83811015610e07577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa0888703018552610df5868351610cff565b95509382019390820190600101610dbb565b50508584038187015286518085528782019482019350915060005b82811015610e7557845160228110610e63577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b84529381019392810192600101610e22565b5091979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f830112610ec257600080fd5b813567ffffffffffffffff80821115610edd57610edd610e82565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908282118183101715610f2357610f23610e82565b81604052838152866020858801011115610f3c57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060408385031215610f6f57600080fd5b82359150602083013567ffffffffffffffff811115610f8d57600080fd5b610f9985828601610eb1565b9150509250929050565b600060208284031215610fb557600080fd5b813567ffffffffffffffff811115610fcc57600080fd5b610fd884828501610eb1565b949350505050565b6020815260006103046020830184610cff565b60006020828403121561100557600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600181811c9082168061104f57607f821691505b602082108103611088577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b601f8211156110d457600081815260208120601f850160051c810160208610156110b55750805b601f850160051c820191505b81811015610b40578281556001016110c1565b505050565b815167ffffffffffffffff8111156110f3576110f3610e82565b61110781611101845461103b565b8461108e565b602080601f83116001811461115a57600084156111245750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b178555610b40565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b828110156111a757888601518255948401946001909101908401611188565b50858210156111e357878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b828152604060208201526000610fd86040830184610cff56fea26469706673582212200f8ba150220e284163771c950bcd5ac6a900ee4cb03f9f88ba2a9dac95d3be1e64736f6c63430008110033";

type BRPreviousMoveTimestampComponentConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BRPreviousMoveTimestampComponentConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BRPreviousMoveTimestampComponent__factory extends ContractFactory {
  constructor(...args: BRPreviousMoveTimestampComponentConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BRPreviousMoveTimestampComponent> {
    return super.deploy(
      world,
      overrides || {}
    ) as Promise<BRPreviousMoveTimestampComponent>;
  }
  override getDeployTransaction(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(world, overrides || {});
  }
  override attach(address: string): BRPreviousMoveTimestampComponent {
    return super.attach(address) as BRPreviousMoveTimestampComponent;
  }
  override connect(signer: Signer): BRPreviousMoveTimestampComponent__factory {
    return super.connect(signer) as BRPreviousMoveTimestampComponent__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BRPreviousMoveTimestampComponentInterface {
    return new utils.Interface(
      _abi
    ) as BRPreviousMoveTimestampComponentInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BRPreviousMoveTimestampComponent {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as BRPreviousMoveTimestampComponent;
  }
}
